assertTrue("intialisation test", true)

init('', 'Matrikon.OPC.Simulation')

println "last error is: ${lastError}"

for(i in 1..30)
{
	group('group.1').with
	{
		println ">>starting group [${name}] iteration [${i}]"
		assertTrue("group creation test", true)

		item('testGroup.myBigFloat').with
		{
			syncValue = "${i}"
			println syncValue
			assertTrue("item read/write test", false)
		}
			
		item('testGroup.myBool').with		
		{
			syncValue = "${i.mod(2)}"
			println syncValue			
		}
		
		item('testGroup.myString').with
		{
			syncValue = "${i}"
			println syncValue					
		}
		
		item('testGroup.myShortInt').with
		{
			syncValue = "${i}"
			println syncValue					
		}		
		
		item('testGroup.myLongInt').with
		{
			syncValue = "${i}"
			println syncValue					
		}				

		item('testGroup.mySmallFloat').with
		{
			syncValue = "${i}"
			println syncValue					
		}
		
		item('testGroup.myBigFloat').with
		{
			syncValue = "${i}"
			println syncValue					
		}		
		
		sleep(1000)
		println "<<ending group.1"
	}
}

group('group.2').with
{
	println '>>starting group.2'
	
	println item('testGroup.myLongInt').syncValue
	println item('testGroup.myShortInt').syncValue
	println item('testGroup.mySmallFloat').syncValue
	
	println '<<ending group.2'
}