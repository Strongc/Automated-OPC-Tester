logInfo('script started...')

init('opc.tcp://pcen33068:4841')

logLevel('info')

logInfo('OPC testbench connected to target OPC Server')

// declare the target nodes we want to watch
def test1Node = node('ns=4;s=MyDemoObject.Test1')
def test2Node = node('ns=4;s=MyDemoObject.Test2')

// create a subscription containing the target nodes
logInfo('creating subscription...')
subscription('firstSubscription').with
{
	monitor(test1Node, test2Node)	
}

// make assertions about the future value of the nodes
test1Node.assertAsyncEquals("expect [Test1] to have value [10] within 30s", 30, '10')
test2Node.assertAsyncEquals("expect [Test2] to have value [10] within 30s", 30, '10')

logInfo('sleeping for 5 seconds')
sleep(5000)

// write value of first target node
logInfo('woken up, setting value for [Test1] to 0')
node('ns=4;s=MyDemoObject.Test1').asyncValue = '0'

logInfo('sleeping for 5 seconds')
sleep(5000)

// write value of second target node
logInfo('woken up, setting value for [Test2] to 0')
node('ns=4;s=MyDemoObject.Test2').asyncValue = '0'

logInfo('end of script')